apiVersion: v1
kind: PersistentVolume
metadata:
  name: db-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: /mnt/data
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: db-pvc
        - name: health-scripts
          emptyDir: {}
      initContainers:
        - name: clone-healthchecks
          image: alpine/git
          command:
            - /bin/sh
            - -c
            - |
              git clone https://gitlab.imt-atlantique.fr/login-nuage/healthchecks.git /repo && \
              cp /repo/postgres.sh /healthchecks/postgres.sh && chmod +x /healthchecks/postgres.sh
          volumeMounts:
            - name: health-scripts
              mountPath: /healthchecks
      containers:
        - name: postgres
          image: postgres:15-alpine
          env:
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "postgres"
          ports:
            - containerPort: 5432
          volumeMounts:
            - name: db-storage
              mountPath: /var/lib/postgresql/data
              subPath: data
            - name: health-scripts
              mountPath: /healthchecks
          livenessProbe:
            exec:
              command: ["/bin/sh", "-c", "/healthchecks/postgres.sh"]
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: db